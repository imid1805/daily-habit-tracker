{"ast":null,"code":"export default {\n  name: 'App',\n  data() {\n    return {\n      newHabit: '',\n      habits: [],\n      completionPercentage: 0\n    };\n  },\n  methods: {\n    addHabit() {\n      if (this.newHabit.trim()) {\n        this.habits.push({\n          id: Date.now(),\n          text: this.newHabit,\n          completed: false\n        });\n        this.newHabit = '';\n        this.updateProgress();\n        this.saveHabits();\n      }\n    },\n    deleteHabit(id) {\n      this.habits = this.habits.filter(habit => habit.id !== id);\n      this.updateProgress();\n      this.saveHabits();\n    },\n    updateProgress() {\n      if (this.habits.length === 0) {\n        this.completionPercentage = 0;\n      } else {\n        const completed = this.habits.filter(habit => habit.completed).length;\n        this.completionPercentage = Math.round(completed / this.habits.length * 100);\n      }\n      this.saveHabits();\n    },\n    saveHabits() {\n      localStorage.setItem('habits', JSON.stringify(this.habits));\n    },\n    loadHabits() {\n      const savedHabits = localStorage.getItem('habits');\n      if (savedHabits) {\n        this.habits = JSON.parse(savedHabits);\n        this.updateProgress();\n      }\n    }\n  },\n  mounted() {\n    this.loadHabits();\n  }\n};","map":{"version":3,"names":["name","data","newHabit","habits","completionPercentage","methods","addHabit","trim","push","id","Date","now","text","completed","updateProgress","saveHabits","deleteHabit","filter","habit","length","Math","round","localStorage","setItem","JSON","stringify","loadHabits","savedHabits","getItem","parse","mounted"],"sources":["/mnt/c/Users/Dablaq/daily-habit-tracker/src/App.vue"],"sourcesContent":["<template>\n  <div id=\"app\">\n    <header>\n      <h1>Suivi des Habitudes</h1>\n    </header>\n    <main>\n      <div class=\"habit-form\">\n        <input \n          v-model=\"newHabit\" \n          @keyup.enter=\"addHabit\"\n          placeholder=\"Nouvelle habitude...\"\n          type=\"text\"\n        >\n        <button @click=\"addHabit\" :disabled=\"!newHabit\">Ajouter</button>\n      </div>\n\n      <div class=\"progress-section\">\n        <div class=\"progress-bar\">\n          <div \n            class=\"progress\" \n            :style=\"{ width: completionPercentage + '%' }\"\n          ></div>\n        </div>\n        <span class=\"progress-text\">{{ completionPercentage }}% complété</span>\n      </div>\n\n      <ul class=\"habits-list\">\n        <li v-for=\"habit in habits\" :key=\"habit.id\" :class=\"{ completed: habit.completed }\">\n          <div class=\"habit-content\">\n            <input \n              type=\"checkbox\" \n              v-model=\"habit.completed\"\n              @change=\"updateProgress\"\n            >\n            <span>{{ habit.text }}</span>\n          </div>\n          <button class=\"delete-btn\" @click=\"deleteHabit(habit.id)\">×</button>\n        </li>\n      </ul>\n    </main>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'App',\n  data() {\n    return {\n      newHabit: '',\n      habits: [],\n      completionPercentage: 0\n    }\n  },\n  methods: {\n    addHabit() {\n      if (this.newHabit.trim()) {\n        this.habits.push({\n          id: Date.now(),\n          text: this.newHabit,\n          completed: false\n        });\n        this.newHabit = '';\n        this.updateProgress();\n        this.saveHabits();\n      }\n    },\n    deleteHabit(id) {\n      this.habits = this.habits.filter(habit => habit.id !== id);\n      this.updateProgress();\n      this.saveHabits();\n    },\n    updateProgress() {\n      if (this.habits.length === 0) {\n        this.completionPercentage = 0;\n      } else {\n        const completed = this.habits.filter(habit => habit.completed).length;\n        this.completionPercentage = Math.round((completed / this.habits.length) * 100);\n      }\n      this.saveHabits();\n    },\n    saveHabits() {\n      localStorage.setItem('habits', JSON.stringify(this.habits));\n    },\n    loadHabits() {\n      const savedHabits = localStorage.getItem('habits');\n      if (savedHabits) {\n        this.habits = JSON.parse(savedHabits);\n        this.updateProgress();\n      }\n    }\n  },\n  mounted() {\n    this.loadHabits();\n  }\n}\n</script>\n\n<style>\n:root {\n  --primary-color: #4CAF50;\n  --secondary-color: #2196F3;\n  --danger-color: #f44336;\n  --background-color: #f5f5f5;\n  --text-color: #333;\n}\n\n* {\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box;\n}\n\nbody {\n  font-family: 'Roboto', sans-serif;\n  background-color: var(--background-color);\n  color: var(--text-color);\n  line-height: 1.6;\n}\n\n#app {\n  max-width: 800px;\n  margin: 0 auto;\n  padding: 2rem;\n}\n\nheader {\n  text-align: center;\n  margin-bottom: 2rem;\n}\n\nh1 {\n  color: var(--primary-color);\n  font-size: 2.5rem;\n  margin-bottom: 1rem;\n}\n\n.habit-form {\n  display: flex;\n  gap: 1rem;\n  margin-bottom: 2rem;\n}\n\ninput[type=\"text\"] {\n  flex: 1;\n  padding: 0.8rem;\n  border: 2px solid #ddd;\n  border-radius: 4px;\n  font-size: 1rem;\n}\n\nbutton {\n  padding: 0.8rem 1.5rem;\n  background-color: var(--primary-color);\n  color: white;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n  transition: background-color 0.3s;\n}\n\nbutton:hover {\n  background-color: #388E3C;\n}\n\nbutton:disabled {\n  background-color: #ccc;\n  cursor: not-allowed;\n}\n\n.progress-section {\n  margin-bottom: 2rem;\n}\n\n.progress-bar {\n  width: 100%;\n  height: 20px;\n  background-color: #ddd;\n  border-radius: 10px;\n  overflow: hidden;\n}\n\n.progress {\n  height: 100%;\n  background-color: var(--primary-color);\n  transition: width 0.3s ease;\n}\n\n.progress-text {\n  display: block;\n  text-align: center;\n  margin-top: 0.5rem;\n  color: var(--text-color);\n}\n\n.habits-list {\n  list-style: none;\n}\n\n.habits-list li {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 1rem;\n  background-color: white;\n  margin-bottom: 0.5rem;\n  border-radius: 4px;\n  box-shadow: 0 2px 4px rgba(0,0,0,0.1);\n  transition: transform 0.2s;\n}\n\n.habits-list li:hover {\n  transform: translateX(5px);\n}\n\n.habit-content {\n  display: flex;\n  align-items: center;\n  gap: 1rem;\n}\n\n.completed {\n  opacity: 0.7;\n}\n\n.completed span {\n  text-decoration: line-through;\n}\n\n.delete-btn {\n  background-color: var(--danger-color);\n  color: white;\n  border: none;\n  border-radius: 50%;\n  width: 30px;\n  height: 30px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  cursor: pointer;\n  font-size: 1.2rem;\n  padding: 0;\n}\n\n.delete-btn:hover {\n  background-color: #d32f2f;\n}\n\n@media (max-width: 600px) {\n  #app {\n    padding: 1rem;\n  }\n\n  .habit-form {\n    flex-direction: column;\n  }\n\n  button {\n    width: 100%;\n  }\n}\n</style>\n"],"mappings":"AA4CA,eAAe;EACbA,IAAI,EAAE,KAAK;EACXC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,QAAQ,EAAE,EAAE;MACZC,MAAM,EAAE,EAAE;MACVC,oBAAoB,EAAE;IACxB;EACF,CAAC;EACDC,OAAO,EAAE;IACPC,QAAQA,CAAA,EAAG;MACT,IAAI,IAAI,CAACJ,QAAQ,CAACK,IAAI,CAAC,CAAC,EAAE;QACxB,IAAI,CAACJ,MAAM,CAACK,IAAI,CAAC;UACfC,EAAE,EAAEC,IAAI,CAACC,GAAG,CAAC,CAAC;UACdC,IAAI,EAAE,IAAI,CAACV,QAAQ;UACnBW,SAAS,EAAE;QACb,CAAC,CAAC;QACF,IAAI,CAACX,QAAO,GAAI,EAAE;QAClB,IAAI,CAACY,cAAc,CAAC,CAAC;QACrB,IAAI,CAACC,UAAU,CAAC,CAAC;MACnB;IACF,CAAC;IACDC,WAAWA,CAACP,EAAE,EAAE;MACd,IAAI,CAACN,MAAK,GAAI,IAAI,CAACA,MAAM,CAACc,MAAM,CAACC,KAAI,IAAKA,KAAK,CAACT,EAAC,KAAMA,EAAE,CAAC;MAC1D,IAAI,CAACK,cAAc,CAAC,CAAC;MACrB,IAAI,CAACC,UAAU,CAAC,CAAC;IACnB,CAAC;IACDD,cAAcA,CAAA,EAAG;MACf,IAAI,IAAI,CAACX,MAAM,CAACgB,MAAK,KAAM,CAAC,EAAE;QAC5B,IAAI,CAACf,oBAAmB,GAAI,CAAC;MAC/B,OAAO;QACL,MAAMS,SAAQ,GAAI,IAAI,CAACV,MAAM,CAACc,MAAM,CAACC,KAAI,IAAKA,KAAK,CAACL,SAAS,CAAC,CAACM,MAAM;QACrE,IAAI,CAACf,oBAAmB,GAAIgB,IAAI,CAACC,KAAK,CAAER,SAAQ,GAAI,IAAI,CAACV,MAAM,CAACgB,MAAM,GAAI,GAAG,CAAC;MAChF;MACA,IAAI,CAACJ,UAAU,CAAC,CAAC;IACnB,CAAC;IACDA,UAAUA,CAAA,EAAG;MACXO,YAAY,CAACC,OAAO,CAAC,QAAQ,EAAEC,IAAI,CAACC,SAAS,CAAC,IAAI,CAACtB,MAAM,CAAC,CAAC;IAC7D,CAAC;IACDuB,UAAUA,CAAA,EAAG;MACX,MAAMC,WAAU,GAAIL,YAAY,CAACM,OAAO,CAAC,QAAQ,CAAC;MAClD,IAAID,WAAW,EAAE;QACf,IAAI,CAACxB,MAAK,GAAIqB,IAAI,CAACK,KAAK,CAACF,WAAW,CAAC;QACrC,IAAI,CAACb,cAAc,CAAC,CAAC;MACvB;IACF;EACF,CAAC;EACDgB,OAAOA,CAAA,EAAG;IACR,IAAI,CAACJ,UAAU,CAAC,CAAC;EACnB;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
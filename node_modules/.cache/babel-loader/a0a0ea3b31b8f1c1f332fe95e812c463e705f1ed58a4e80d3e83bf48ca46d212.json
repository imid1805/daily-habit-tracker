{"ast":null,"code":"import \"core-js/modules/es.date.to-string.js\";\nimport { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, normalizeClass as _normalizeClass, vModelText as _vModelText, withKeys as _withKeys, withDirectives as _withDirectives, createCommentVNode as _createCommentVNode, normalizeStyle as _normalizeStyle, vModelCheckbox as _vModelCheckbox, TransitionGroup as _TransitionGroup, withCtx as _withCtx, createVNode as _createVNode, createStaticVNode as _createStaticVNode } from \"vue\";\nvar _hoisted_1 = {\n  id: \"app\"\n};\nvar _hoisted_2 = {\n  \"class\": \"date-section\"\n};\nvar _hoisted_3 = {\n  \"class\": \"calendar\"\n};\nvar _hoisted_4 = {\n  \"class\": \"calendar-dates\"\n};\nvar _hoisted_5 = {\n  \"class\": \"habit-form\"\n};\nvar _hoisted_6 = {\n  \"class\": \"habit-content\"\n};\nvar _hoisted_7 = {\n  key: 0,\n  \"class\": \"mdi mdi-check\"\n};\nvar _hoisted_8 = {\n  \"class\": \"habit-actions\"\n};\nvar _hoisted_9 = [\"onUpdate:modelValue\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"header\", null, [_cache[5] || (_cache[5] = _createElementVNode(\"h1\", null, \"Habit Tracker\", -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_2, [_cache[4] || (_cache[4] = _createElementVNode(\"h2\", null, \"Today\", -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_3, [_cache[3] || (_cache[3] = _createStaticVNode(\"<div class=\\\"calendar-row\\\"><span class=\\\"day\\\">M</span><span class=\\\"day\\\">T</span><span class=\\\"day\\\">W</span><span class=\\\"day\\\">T</span><span class=\\\"day\\\">F</span><span class=\\\"day\\\">S</span><span class=\\\"day\\\">S</span></div>\", 1)), _createElementVNode(\"div\", _hoisted_4, [(_openBlock(), _createElementBlock(_Fragment, null, _renderList(7, function (n) {\n    return _createElementVNode(\"span\", {\n      key: n,\n      \"class\": _normalizeClass({\n        'current-date': n === new Date().getDate()\n      })\n    }, _toDisplayString(n), 3 /* TEXT, CLASS */);\n  }), 64 /* STABLE_FRAGMENT */))])])])]), _createElementVNode(\"main\", null, [_createElementVNode(\"div\", _hoisted_5, [_withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = function ($event) {\n      return $data.newHabit = $event;\n    }),\n    onKeyup: _cache[1] || (_cache[1] = _withKeys(function () {\n      return $options.addHabit && $options.addHabit.apply($options, arguments);\n    }, [\"enter\"])),\n    placeholder: \"Reach your goals\",\n    type: \"text\"\n  }, null, 544 /* NEED_HYDRATION, NEED_PATCH */), [[_vModelText, $data.newHabit]])]), _createVNode(_TransitionGroup, {\n    name: \"habit\",\n    tag: \"ul\",\n    \"class\": \"habits-list\"\n  }, {\n    \"default\": _withCtx(function () {\n      return [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.habits, function (habit) {\n        return _openBlock(), _createElementBlock(\"li\", {\n          key: habit.id,\n          \"class\": _normalizeClass({\n            completed: habit.completed\n          })\n        }, [_createElementVNode(\"div\", _hoisted_6, [_createElementVNode(\"div\", {\n          \"class\": \"habit-icon\",\n          style: _normalizeStyle({\n            backgroundColor: $options.getRandomColor()\n          })\n        }, [habit.completed ? (_openBlock(), _createElementBlock(\"i\", _hoisted_7)) : _createCommentVNode(\"v-if\", true)], 4 /* STYLE */), _createElementVNode(\"span\", null, _toDisplayString(habit.text), 1 /* TEXT */)]), _createElementVNode(\"div\", _hoisted_8, [_withDirectives(_createElementVNode(\"input\", {\n          type: \"checkbox\",\n          \"onUpdate:modelValue\": function onUpdateModelValue($event) {\n            return habit.completed = $event;\n          },\n          onChange: _cache[2] || (_cache[2] = function () {\n            return $options.updateProgress && $options.updateProgress.apply($options, arguments);\n          })\n        }, null, 40 /* PROPS, NEED_HYDRATION */, _hoisted_9), [[_vModelCheckbox, habit.completed]])])], 2 /* CLASS */);\n      }), 128 /* KEYED_FRAGMENT */))];\n    }),\n    _: 1 /* STABLE */\n  })])]);\n}","map":{"version":3,"names":["id","key","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_hoisted_3","_createStaticVNode","_hoisted_4","_Fragment","_renderList","n","_normalizeClass","Date","getDate","_hoisted_5","_cache","$event","$data","newHabit","onKeyup","_withKeys","$options","addHabit","apply","arguments","placeholder","type","_createVNode","_TransitionGroup","name","tag","_withCtx","habits","habit","completed","_hoisted_6","style","_normalizeStyle","backgroundColor","getRandomColor","_hoisted_7","_createCommentVNode","_toDisplayString","text","_hoisted_8","onUpdateModelValue","onChange","updateProgress","_hoisted_9","_"],"sources":["c:\\Users\\Dablaq\\daily-habit-tracker\\src\\App.vue"],"sourcesContent":["<template>\n  <div id=\"app\">\n    <header>\n      <h1>Habit Tracker</h1>\n      <div class=\"date-section\">\n        <h2>Today</h2>\n        <div class=\"calendar\">\n          <div class=\"calendar-row\">\n            <span class=\"day\">M</span>\n            <span class=\"day\">T</span>\n            <span class=\"day\">W</span>\n            <span class=\"day\">T</span>\n            <span class=\"day\">F</span>\n            <span class=\"day\">S</span>\n            <span class=\"day\">S</span>\n          </div>\n          <div class=\"calendar-dates\">\n            <span v-for=\"n in 7\" :key=\"n\" :class=\"{ 'current-date': n === new Date().getDate() }\">\n              {{ n }}\n            </span>\n          </div>\n        </div>\n      </div>\n    </header>\n\n    <main>\n      <div class=\"habit-form\">\n        <input \n          v-model=\"newHabit\" \n          @keyup.enter=\"addHabit\"\n          placeholder=\"Reach your goals\"\n          type=\"text\"\n        >\n      </div>\n\n      <transition-group name=\"habit\" tag=\"ul\" class=\"habits-list\">\n        <li v-for=\"habit in habits\" :key=\"habit.id\" :class=\"{ completed: habit.completed }\">\n          <div class=\"habit-content\">\n            <div class=\"habit-icon\" :style=\"{ backgroundColor: getRandomColor() }\">\n              <i class=\"mdi mdi-check\" v-if=\"habit.completed\"></i>\n            </div>\n            <span>{{ habit.text }}</span>\n          </div>\n          <div class=\"habit-actions\">\n            <input \n              type=\"checkbox\" \n              v-model=\"habit.completed\"\n              @change=\"updateProgress\"\n            >\n          </div>\n        </li>\n      </transition-group>\n    </main>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'App',\n  data() {\n    return {\n      newHabit: '',\n      habits: [],\n      colors: ['#FFB6C1', '#98FB98', '#87CEFA', '#DDA0DD', '#F0E68C']\n    }\n  },\n  methods: {\n    addHabit() {\n      if (this.newHabit.trim()) {\n        this.habits.push({\n          id: Date.now(),\n          text: this.newHabit,\n          completed: false\n        })\n        this.newHabit = ''\n      }\n    },\n    deleteHabit(id) {\n      this.habits = this.habits.filter(habit => habit.id !== id)\n    },\n    updateProgress() {\n      // La progression est mise Ã  jour automatiquement via v-model\n    },\n    getRandomColor() {\n      return this.colors[Math.floor(Math.random() * this.colors.length)]\n    }\n  },\n  computed: {\n    completionPercentage() {\n      if (this.habits.length === 0) return 0\n      const completed = this.habits.filter(h => h.completed).length\n      return Math.round((completed / this.habits.length) * 100)\n    }\n  }\n}\n</script>\n\n<style>\n@import '@mdi/font/css/materialdesignicons.css';\n\n:root {\n  --primary-color: #6B48FF;\n  --background-color: #F9F5FF;\n  --text-color: #333;\n  --border-radius: 15px;\n  --shadow: 0 2px 10px rgba(0, 0, 0, 0.1);\n}\n\n* {\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box;\n  font-family: 'Segoe UI', sans-serif;\n}\n\nbody {\n  background-color: var(--background-color);\n  color: var(--text-color);\n  line-height: 1.6;\n}\n\n#app {\n  max-width: 600px;\n  margin: 0 auto;\n  padding: 2rem;\n}\n\nheader {\n  text-align: left;\n  margin-bottom: 2rem;\n}\n\nh1 {\n  font-size: 1.8rem;\n  margin-bottom: 1.5rem;\n  color: var(--primary-color);\n}\n\n.date-section {\n  background: white;\n  padding: 1.5rem;\n  border-radius: var(--border-radius);\n  box-shadow: var(--shadow);\n}\n\nh2 {\n  font-size: 1.2rem;\n  margin-bottom: 1rem;\n}\n\n.calendar {\n  margin-top: 1rem;\n}\n\n.calendar-row {\n  display: flex;\n  justify-content: space-between;\n  margin-bottom: 0.5rem;\n}\n\n.day {\n  width: 30px;\n  text-align: center;\n  font-size: 0.9rem;\n  color: #666;\n}\n\n.calendar-dates {\n  display: flex;\n  justify-content: space-between;\n}\n\n.calendar-dates span {\n  width: 30px;\n  height: 30px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-size: 0.9rem;\n  border-radius: 50%;\n}\n\n.current-date {\n  background-color: var(--primary-color);\n  color: white;\n}\n\n.habit-form {\n  margin-bottom: 2rem;\n}\n\ninput[type=\"text\"] {\n  width: 100%;\n  padding: 1rem 1.5rem;\n  border: none;\n  border-radius: var(--border-radius);\n  font-size: 1rem;\n  background: white;\n  box-shadow: var(--shadow);\n}\n\ninput[type=\"text\"]:focus {\n  outline: none;\n  box-shadow: 0 0 0 2px var(--primary-color);\n}\n\n.habits-list {\n  list-style: none;\n}\n\n.habits-list li {\n  background: white;\n  padding: 1rem;\n  border-radius: var(--border-radius);\n  margin-bottom: 1rem;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  box-shadow: var(--shadow);\n  transition: transform 0.2s;\n}\n\n.habit-content {\n  display: flex;\n  align-items: center;\n  gap: 1rem;\n}\n\n.habit-icon {\n  width: 40px;\n  height: 40px;\n  border-radius: 10px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  color: white;\n}\n\n.habit-icon i {\n  font-size: 1.2rem;\n}\n\ninput[type=\"checkbox\"] {\n  width: 24px;\n  height: 24px;\n  border-radius: 50%;\n  border: 2px solid #ddd;\n  appearance: none;\n  cursor: pointer;\n  position: relative;\n}\n\ninput[type=\"checkbox\"]:checked {\n  background-color: var(--primary-color);\n  border-color: var(--primary-color);\n}\n\ninput[type=\"checkbox\"]:checked::after {\n  content: 'â';\n  position: absolute;\n  color: white;\n  font-size: 14px;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n}\n\n.habit-enter-active,\n.habit-leave-active {\n  transition: all 0.3s ease;\n}\n\n.habit-enter-from,\n.habit-leave-to {\n  opacity: 0;\n  transform: translateY(30px);\n}\n\n@media (max-width: 600px) {\n  #app {\n    padding: 1rem;\n  }\n  \n  .calendar-dates span {\n    width: 25px;\n    height: 25px;\n    font-size: 0.8rem;\n  }\n  \n  .day {\n    width: 25px;\n    font-size: 0.8rem;\n  }\n}\n</style>\n"],"mappings":";;;EACOA,EAAE,EAAC;AAAK;;EAGJ,SAAM;AAAc;;EAElB,SAAM;AAAU;;EAUd,SAAM;AAAgB;;EAU1B,SAAM;AAAY;;EAWd,SAAM;AAAe;;EArCpCC,GAAA;EAuCiB,SAAM;;;EAIR,SAAM;AAAe;iBA3CpC;;uBACEC,mBAAA,CAoDM,OApDNC,UAoDM,GAnDJC,mBAAA,CAqBS,iB,0BApBPA,mBAAA,CAAsB,YAAlB,eAAa,sBACjBA,mBAAA,CAkBM,OAlBNC,UAkBM,G,0BAjBJD,mBAAA,CAAc,YAAV,OAAK,sBACTA,mBAAA,CAeM,OAfNE,UAeM,G,0BArBdC,kBAAA,gPAgBUH,mBAAA,CAIM,OAJNI,UAIM,I,cAHJN,mBAAA,CAEOO,SAAA,QAnBnBC,WAAA,CAiB8B,CAAC,EAjB/B,UAiByBC,CAAC;WAAdP,mBAAA,CAEO;MAFeH,GAAG,EAAEU,CAAC;MAAG,SAjB3CC,eAAA;QAAA,gBAiBoED,CAAC,SAASE,IAAI,GAAGC,OAAO;MAAA;wBAC3EH,CAAC;0CAOdP,mBAAA,CA2BO,eA1BLA,mBAAA,CAOM,OAPNW,UAOM,G,gBANJX,mBAAA,CAKC;IAhCT,uBAAAY,MAAA,QAAAA,MAAA,gBAAAC,MAAA;MAAA,OA4BmBC,KAAA,CAAAC,QAAQ,GAAAF,MAAA;IAAA;IAChBG,OAAK,EAAAJ,MAAA,QAAAA,MAAA,MA7BhBK,SAAA;MAAA,OA6BwBC,QAAA,CAAAC,QAAA,IAAAD,QAAA,CAAAC,QAAA,CAAAC,KAAA,CAAAF,QAAA,EAAAG,SAAA,CAAQ;IAAA;IACtBC,WAAW,EAAC,kBAAkB;IAC9BC,IAAI,EAAC;iEAHIT,KAAA,CAAAC,QAAQ,E,KAOrBS,YAAA,CAgBmBC,gBAAA;IAhBDC,IAAI,EAAC,OAAO;IAACC,GAAG,EAAC,IAAI;IAAC,SAAM;;IAnCpD,WAAAC,QAAA,CAoCY;MAAA,OAAuB,E,kBAA3B9B,mBAAA,CAcKO,SAAA,QAlDbC,WAAA,CAoC4BQ,KAAA,CAAAe,MAAM,EApClC,UAoCmBC,KAAK;6BAAhBhC,mBAAA,CAcK;UAdwBD,GAAG,EAAEiC,KAAK,CAAClC,EAAE;UAAG,SApCrDY,eAAA;YAAAuB,SAAA,EAoCyED,KAAK,CAACC;UAAS;YAC9E/B,mBAAA,CAKM,OALNgC,UAKM,GAJJhC,mBAAA,CAEM;UAFD,SAAM,YAAY;UAAEiC,KAAK,EAtC1CC,eAAA;YAAAC,eAAA,EAsC+DjB,QAAA,CAAAkB,cAAc;UAAA;YAChCN,KAAK,CAACC,SAAS,I,cAA9CjC,mBAAA,CAAoD,KAApDuC,UAAoD,KAvClEC,mBAAA,e,kBAyCYtC,mBAAA,CAA6B,cAAAuC,gBAAA,CAApBT,KAAK,CAACU,IAAI,iB,GAErBxC,mBAAA,CAMM,OANNyC,UAMM,G,gBALJzC,mBAAA,CAIC;UAHCuB,IAAI,EAAC,UAAU;UA7C7B,gCAAAmB,mBAAA7B,MAAA;YAAA,OA8CuBiB,KAAK,CAACC,SAAS,GAAAlB,MAAA;UAAA;UACvB8B,QAAM,EAAA/B,MAAA,QAAAA,MAAA;YAAA,OAAEM,QAAA,CAAA0B,cAAA,IAAA1B,QAAA,CAAA0B,cAAA,CAAAxB,KAAA,CAAAF,QAAA,EAAAG,SAAA,CAAc;UAAA;iDA/CrCwB,UAAA,I,kBA8CuBf,KAAK,CAACC,SAAS,E;;;IA9CtCe,CAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}